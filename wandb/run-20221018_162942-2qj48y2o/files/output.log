GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/eos/user/r/rradev/new_parquet/test_file_flat_argon_12_GENIEv2_0.parquet
/eos/user/r/rradev/new_parquet/test_file_flat_argon_12_GENIEv3_G18_10b_0.parquet
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name | Type                | Params
---------------------------------------------
0 | net  | ParticleFlowNetwork | 58.4 K
1 | loss | CrossEntropyLoss    | 0
---------------------------------------------
58.4 K    Trainable params
0         Non-trainable params
58.4 K    Total params
0.233     Total estimated model params size (MB)
/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:236: PossibleUserWarning: The dataloader, val_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 4 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
Sanity Checking DataLoader 0:   0%|                                                                                                                                                                                                                            | 0/1954 [00:00<?, ?it/s]
/data/rradev/generator_reweight/models/model.py:146: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  probas = F.softmax(y_hat)
/data/rradev/generator_reweight/models/model.py:37: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  features = torch.tensor(batch['features'], dtype=torch.float)
/data/rradev/generator_reweight/models/model.py:34: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(labels, dtype=torch.long)
/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/torchmetrics/utilities/prints.py:36: UserWarning: Torchmetrics v0.9 introduced a new argument class property called `full_state_update` that has
                not been set for this class (_ResultMetric). The property determines if `update` by
                default needs access to the full metric state. If this is not the case, significant speedups can be
                achieved and we recommend setting this to `False`.
                We provide an checking function
                `from torchmetrics.utilities import check_forward_no_full_state`
                that can be used to check if the `full_state_update=True` (old and potential slower behaviour,
                default for now) or if `full_state_update=False` can be used safely.
  warnings.warn(*args, **kwargs)
/data/rradev/generator_reweight/models/model.py:46: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  acc = accuracy(predictions, torch.tensor(labels, dtype=torch.int32))
/data/rradev/generator_reweight/models/model.py:47: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).








Sanity Checking DataLoader 0: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1954/1954 [00:43<00:00, 45.04it/s]
Traceback (most recent call last):
  File "/data/rradev/generator_reweight/train.py", line 97, in <module>
    trainer.fit(model, data)
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 696, in fit
    self._call_and_handle_interrupt(
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 735, in _fit_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1166, in _run
    results = self._run_stage()
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1252, in _run_stage
    return self._run_train()
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _run_train
    self._run_sanity_check()
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1343, in _run_sanity_check
    val_loop.run()
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 207, in run
    output = self.on_run_end()
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 183, in on_run_end
    self._evaluation_epoch_end(self._outputs)
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 293, in _evaluation_epoch_end
    self.trainer._call_lightning_module_hook(hook_name, output_or_outputs)
  File "/afs/cern.ch/user/r/rradev/envs/generator_translation/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1550, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "/data/rradev/generator_reweight/models/model.py", line 142, in validation_epoch_end
    self.compute_kls(val_dataloader.dataset, dist_names=['w', 'x', 'y'], weights=weights_a)
  File "/data/rradev/generator_reweight/models/model.py", line 108, in compute_kls
    val_distributions = dataset.validation_variables
AttributeError: 'ParticleCloud' object has no attribute 'validation_variables'